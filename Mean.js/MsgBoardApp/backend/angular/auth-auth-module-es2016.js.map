{"version":3,"sources":["./src/app/auth/login/login.component.html","./src/app/auth/signup/signup.component.html","./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/login/login.component.css","./src/app/auth/login/login.component.ts","./src/app/auth/signup/signup.component.css","./src/app/auth/signup/signup.component.ts"],"names":[],"mappings":"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","file":"auth-auth-module-es2016.js","sourcesContent":["export default \"<mat-card>\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\n  <form (submit)=\\\"onLogin(loginForm)\\\" #loginForm=\\\"ngForm\\\" *ngIf=\\\"!isLoading\\\">\\n    <mat-form-field style=\\\"margin-right:28px\\\">\\n      <input\\n        matInput\\n        name=\\\"email\\\"\\n        type=\\\"email\\\"\\n        placeholder=\\\"E-MAil\\\"\\n        ngModel\\n        #emailInput=\\\"ngModel\\\"\\n        email\\n        required\\n      />\\n      <mat-error *ngIf=\\\"emailInput.invalid\\\">\\n        Please enter a valid Email.\\n      </mat-error>\\n    </mat-form-field>\\n    <br />\\n    <mat-form-field>\\n      <input\\n        matInput\\n        type=\\\"password\\\"\\n        name=\\\"password\\\"\\n        placeholder=\\\"Password\\\"\\n        ngModel\\n        #passwordInput=\\\"ngModel\\\"\\n        password\\n        required\\n      />\\n      <mat-error *ngIf=\\\"passwordInput.invalid\\\">\\n        Please enter a valid Password.\\n      </mat-error>\\n    </mat-form-field>\\n    <br />\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" *ngIf=\\\"!isLoading\\\">\\n      Login\\n    </button>\\n    <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\n  </form>\\n</mat-card>\\n\"","export default \"<mat-card>\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\n  <form (submit)=\\\"onSignup(signupForm)\\\" #signupForm=\\\"ngForm\\\" *ngIf=\\\"!isLoading\\\">\\n    <mat-form-field style=\\\"margin-right:28px\\\">\\n      <input\\n        matInput\\n        name=\\\"email\\\"\\n        type=\\\"email\\\"\\n        placeholder=\\\"E-MAil\\\"\\n        ngModel\\n        #emailInput=\\\"ngModel\\\"\\n        email\\n        required\\n      />\\n      <mat-error *ngIf=\\\"emailInput.invalid\\\">\\n        Please enter a valid Email.\\n      </mat-error>\\n    </mat-form-field>\\n    <br />\\n    <mat-form-field>\\n      <input\\n        matInput\\n        type=\\\"password\\\"\\n        name=\\\"password\\\"\\n        placeholder=\\\"Password\\\"\\n        ngModel\\n        #passwordInput=\\\"ngModel\\\"\\n        password\\n        required\\n      />\\n      <mat-error *ngIf=\\\"passwordInput.invalid\\\">\\n        Please enter a valid Password.\\n      </mat-error>\\n    </mat-form-field>\\n    <br />\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" *ngIf=\\\"!isLoading\\\">\\n      Signup\\n    </button>\\n    <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\n  </form>\\n</mat-card>\\n\"","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\n\r\nconst routes: Routes = [\r\n  { path: \"login\", component: LoginComponent },\r\n  { path: \"signup\", component: SignupComponent }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\nimport { AngularMaterialModule } from \"../angular-material.module\";\r\nimport { AuthRoutingModule } from \"./auth-routing.module\";\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, SignupComponent],\r\n  imports: [CommonModule, AngularMaterialModule, FormsModule, AuthRoutingModule]\r\n})\r\nexport class AuthModule {}\r\n","export default \"mat-form-field {\\r\\n    width: 100%;\\r\\n}\\r\\nmat-spinner {\\r\\n    margin: auto;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztBQUNmO0FBQ0E7SUFDSSxZQUFZO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxubWF0LXNwaW5uZXIge1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG59Il19 */\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { Subscription } from \"rxjs\";\n\nimport { AuthService } from \"../auth.service\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"]\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  isLoading = false;\n  private authStatusSub: Subscription;\n\n  constructor(public authService: AuthService) {}\n\n  ngOnInit() {\n    this.authStatusSub = this.authService\n      .getAuthStatusListener()\n      .subscribe(authStatus => {\n        this.isLoading = false;\n      });\n  }\n\n  onLogin(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.authService.login(form.value.email, form.value.password);\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n}\n","export default \"mat-form-field {\\r\\n    width: 100%;\\r\\n}\\r\\nmat-spinner {\\r\\n    margin: auto;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0FBQ2Y7QUFDQTtJQUNJLFlBQVk7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9hdXRoL3NpZ251cC9zaWdudXAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxkIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcbm1hdC1zcGlubmVyIHtcclxuICAgIG1hcmdpbjogYXV0bztcclxufSJdfQ== */\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { Subscription } from \"rxjs\";\n\nimport { AuthService } from \"../auth.service\";\n\n@Component({\n  selector: \"app-signup\",\n  templateUrl: \"./signup.component.html\",\n  styleUrls: [\"./signup.component.css\"]\n})\nexport class SignupComponent implements OnInit, OnDestroy {\n  isLoading = false;\n  private authStatusSub: Subscription;\n\n  constructor(public authService: AuthService) {}\n\n  ngOnInit() {\n    this.authStatusSub = this.authService\n      .getAuthStatusListener()\n      .subscribe(authStatus => {\n        this.isLoading = false;\n      });\n  }\n\n  onSignup(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.authService.createUser(form.value.email, form.value.password);\n  }\n  \n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n}\n"],"sourceRoot":"webpack:///"}